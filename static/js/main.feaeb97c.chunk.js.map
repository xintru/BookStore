{"version":3,"sources":["containers/SelectedCard/SelectedCard.module.css","components/CartControls/CartControls.module.css","components/Cart/Cart.module.css","App.module.css","components/UI/Spinner/Spinner.module.css","components/ProductCard/ProductCard.module.css","containers/Products/Products.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Spinner/Spinner.js","components/ProductCard/ProductCard.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/CartControls/CartControls.js","store/actions/actionTypes.js","store/actions/actions.js","containers/SelectedCard/SelectedCard.js","containers/Products/Products.js","components/Cart/Cart.js","App.js","serviceWorker.js","store/reducer/reducer.js","store/sagas/productSaga.js","store/sagas/index.js","index.js"],"names":["module","exports","Spinner","className","classes","loader","productCard","props","Card","onClick","showModal","index","title","src","img","alt","backdrop","show","Backdrop","clicked","Modal","Fragment","this","hide","style","transform","opacity","children","Component","CartControls","Controls","removeItem","MoreLess","type","value","readOnly","addItem","AddToCart","addToCart","PRODUCTS_INIT_START","initStartLoading","initSuccess","response","initFail","error","selectedCard","state","setState","pushToCart","order","price","Wrapper","BriefBookInfo","OtherInfo","subtitle","Price","connect","dispatch","Products","currentCard","data","hideModal","products","map","product","i","ProductCard","image","key","isbn13","loading","modal","SelectedCard","url","ProductsContainer","Cart","cartUI","sum","Empty","FinalPrice","toFixed","content","orders","App","showCart","onCartToggle","initStart","cart","Header","orderCount","length","actionTypes","Boolean","window","location","hostname","match","initialState","action","push","newSum","Number","reducer","books","productSaga","put","actions","axios","get","getProductsSaga","takeEvery","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.feaeb97c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"SelectedCard_Wrapper__3V4QF\",\"BriefBookInfo\":\"SelectedCard_BriefBookInfo__1d7Ct\",\"OtherInfo\":\"SelectedCard_OtherInfo__3fEda\",\"Price\":\"SelectedCard_Price__9bHvu\",\"CartControls\":\"SelectedCard_CartControls__3Hsun\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controls\":\"CartControls_Controls__2mQdK\",\"MoreLess\":\"CartControls_MoreLess__Nmyne\",\"AddToCart\":\"CartControls_AddToCart__BLCGt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cart\":\"Cart_Cart__25Ayl\",\"Empty\":\"Cart_Empty__1u72a\",\"FinalPrice\":\"Cart_FinalPrice__uXS1K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"App_Header__1E4NM\",\"Cart\":\"App_Cart__3PaiA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__d-ssg\",\"load6\":\"Spinner_load6__2fCiY\",\"round\":\"Spinner_round__26qnL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"ProductCard_Card__npHTw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProductsContainer\":\"Products_ProductsContainer__3Eyz0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2NWDf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1k1uQ\"};","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\n// Спиннер, который никто и никогда не увидит, потому что апи довольно быстрое.\r\n\r\nconst Spinner = () => (\r\n    <div className={classes.loader}>Loading...</div>\r\n);\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport classes from './ProductCard.module.css'\r\n\r\n// Карточки из GET запроса\r\n\r\nconst productCard = props => {\r\n    return (\r\n        <section className={classes.Card} onClick={() => props.showModal(props.index)}>\r\n            <h3>{props.title}</h3>\r\n            <img src={props.img} alt=\"Product\"/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default productCard;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\n// Бэкдроп для модального окна\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React, { Component } from 'react';\r\n\r\nimport classes from './Modal.module.css';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\n// Модальное окно\r\n\r\nclass Modal extends Component {\r\n\r\n    render () {\r\n        return ( \r\n            <React.Fragment>\r\n                <Backdrop show={this.props.show} clicked={this.props.hide} />\r\n                <div\r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport classes from './CartControls.module.css';\r\n\r\n// Элементы управления для отправки в корзину.\r\n\r\nconst CartControls = props => {\r\n    return (\r\n        <div>\r\n            <div className={classes.Controls}>\r\n                <button onClick={props.removeItem} className={classes.MoreLess}>-</button>\r\n                <input type=\"text\"value={props.value} readOnly />\r\n                <button onClick={props.addItem} className={classes.MoreLess}>+</button>\r\n            </div>\r\n            <div className={classes.AddToCart}>\r\n                <button onClick={props.addToCart}>Add to cart</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartControls;","export const PRODUCTS_INIT_START = 'PRODUCTS_INIT_START';\r\nexport const PRODUCTS_INIT_START_LOADING = 'PRODUCTS_INIT_START_LOADING';\r\nexport const PRODUCTS_INIT_SUCCESS = 'PRODUCTS_INIT_SUCCESS';\r\nexport const PRODUCTS_INIT_FAIL = 'PRODUCTS_INIT_FAIL';\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";","import * as actionTypes from './actionTypes';\r\n\r\n\r\nexport const initStart = () => {\r\n    return {\r\n        type: actionTypes.PRODUCTS_INIT_START\r\n    };\r\n};\r\n\r\nexport const initStartLoading = () => {\r\n    return {\r\n        type: actionTypes.PRODUCTS_INIT_START_LOADING\r\n    };\r\n};\r\n\r\nexport const initSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.PRODUCTS_INIT_SUCCESS,\r\n        response: response\r\n    };\r\n};\r\n\r\nexport const initFail = (error) => {\r\n    return {\r\n        type: actionTypes.PRODUCTS_INIT_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const addToCart = (order) => {\r\n    return {\r\n        type: actionTypes.ADD_TO_CART,\r\n        order: order\r\n    };\r\n};","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport classes from './SelectedCard.module.css'\r\nimport CartControls from '../../components/CartControls/CartControls';\r\nimport {addToCart} from '../../store/actions/actions'\r\n\r\n\r\n// Модальное окно, отправка в корзину.\r\n\r\nclass selectedCard extends Component {\r\n    state = {\r\n        value: 1\r\n    }\r\n    \r\n    addItem = () => {\r\n        this.setState({value: this.state.value + 1})\r\n    }\r\n\r\n    removeItem = () => {\r\n        this.setState({value: this.state.value - 1})\r\n    }\r\n\r\n    pushToCart = () => {\r\n        const order = {\r\n            value: this.state.value,\r\n            title: this.props.title,\r\n            price: this.props.price\r\n        }\r\n        this.props.addToCart(order);\r\n        this.props.hide();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <article className={classes.Wrapper}>\r\n                <section className={classes.BriefBookInfo}>\r\n                    <h2>{this.props.title}</h2>\r\n                    <img src={this.props.img} alt=\"Book\" />\r\n                </section>\r\n                <section className={classes.OtherInfo}>\r\n                    <h3>{this.props.subtitle}</h3>\r\n                    <p>\r\n                        Some other info that could be provided for the book. I could look it up by myself and hardcode it, but hardcoding is bad.\r\n                        Oh well, at least i can now show off, that i know english quite well.\r\n                    </p>\r\n                    <p>\r\n                        Do you know what is the difference between a muffin and a cupcake? Ask me during our interview if only i'm getting invited after this one.\r\n                    </p>\r\n                    <p className={classes.Price}>Price: {this.props.price} $</p>\r\n                    <section className={classes.CartControls}>\r\n                        <CartControls value={this.state.value} addItem={this.addItem} removeItem={this.removeItem} addToCart={this.pushToCart} />\r\n                    </section>\r\n                </section>\r\n            </article>\r\n        );    \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToCart: (order) => dispatch(addToCart(order))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(selectedCard);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport ProductCard from '../../components/ProductCard/ProductCard';\r\nimport classes from './Products.module.css'\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport SelectedCard from '../SelectedCard/SelectedCard';\r\n\r\n// Основной контейнер, в котором выводятся карточки из GET запроса, а также\r\n// модальное окно.\r\n\r\nclass Products extends Component {\r\n\r\n    state = {\r\n        showModal: false,\r\n        currentCard: {}\r\n    }\r\n    \r\n    showModal = ( index ) => {\r\n        this.setState({currentCard: this.props.data[index]})\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    hideModal = () => {\r\n        this.setState({showModal: false})\r\n        this.setState({currentCard: {}})\r\n    }\r\n\r\n    render() {\r\n        let products;\r\n        if (this.props.data) {\r\n            products = this.props.data.map((product, i) => <ProductCard img={product.image}\r\n                                                                        key={product.isbn13}\r\n                                                                        title={product.title}\r\n                                                                        showModal={this.showModal}\r\n                                                                        index={i} />);\r\n        }\r\n\r\n        if(this.props.loading) {\r\n            products = <Spinner />\r\n        }\r\n\r\n        const modal = this.state.showModal ? \r\n        <Modal show={this.state.showModal} hide={this.hideModal}>\r\n            <SelectedCard title={this.state.currentCard.title}\r\n                            img={this.state.currentCard.image}\r\n                            subtitle={this.state.currentCard.subtitle}\r\n                            price={this.state.currentCard.price}\r\n                            url={this.state.currentCard.url}\r\n                            hide={this.hideModal}\r\n                             />\r\n        </Modal> : null;\r\n        \r\n        return(\r\n            <div className={classes.ProductsContainer}>\r\n                {modal}\r\n                {products}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        data: state.data\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Products);","import React from 'react';\r\n\r\nimport classes from './Cart.module.css';\r\n\r\n// Этот компонент - корзина. Если общая сумма покупок равна нулю, то выводится сообщение, что корзина пуста.\r\n// Переход к расчету - только кнопка. Можно конечно реализовать POST в какую-нибудь базу данных.\r\n\r\nconst Cart = props => {\r\n    let cartUI;\r\n\r\n    if (props.sum === 0) {\r\n        cartUI = <p className={classes.Empty}>Sorry!<br/>The cart is empty!</p>\r\n    } else {\r\n        cartUI = <React.Fragment>\r\n                    <p className={classes.FinalPrice}>Total price: {(props.sum).toFixed(2)} $</p>\r\n                    <button>Proceed to checkout</button>\r\n                </React.Fragment>\r\n    };\r\n    const content = props.orders.map(order => {\r\n        return (\r\n            <div>\r\n                <li>{order.title}: {order.price * order.value} $</li>\r\n            </div>\r\n        )     \r\n    });\r\n\r\n    return (\r\n        <div className={classes.Cart}>\r\n            <ol>\r\n                {content}\r\n            </ol>\r\n            {cartUI}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport Products from './containers/Products/Products';\nimport {initStart} from './store/actions/actions';\nimport classes from  './App.module.css';\nimport Cart from './components/Cart/Cart';\n\n// Основной контейнер, в котором хранится все приложение.\n\nclass App extends Component {\n  state = {\n    showCart: false\n  }\n\n  componentDidMount() {\n    this.props.initStart();\n  }\n\n  onCartToggle = () => {\n    this.setState({showCart: !this.state.showCart})\n  }\n\n  render() {\n    let cart = null;\n    if (this.state.showCart) {\n      cart = <Cart orders={this.props.orders} sum={this.props.sum} />\n    }\n\n    return (\n      <div>\n        <header className={classes.Header}>\n            <button className={classes.Cart} onClick={this.onCartToggle}><i className=\"fa fa-shopping-cart\"></i> {this.props.orderCount}</button>\n            <h1>SomeLogo</h1>\n        </header>\n        {cart}\n        <Products />\n      </div>\n      \n    );\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    orderCount: state.order.length,\n    orders: state.order,\n    sum: state.sum\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      initStart: () => dispatch(initStart())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    order: [],\r\n    sum: 0\r\n};\r\n\r\nconst pushToCart = (state, action) => {\r\n    state.order.push(action.order);\r\n    const newSum = Number((action.order.price * action.order.value).toFixed(2));\r\n    return {\r\n        ...state,\r\n        sum: state.sum + newSum\r\n    };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.PRODUCTS_INIT_START_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.PRODUCTS_INIT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.response.data.books\r\n            }\r\n        case actionTypes.PRODUCTS_INIT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        case actionTypes.ADD_TO_CART:\r\n            return pushToCart(state, action);\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import {put} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport * as actions from '../actions/actions';\r\n\r\nexport function* productSaga (action) {\r\n    yield put(actions.initStartLoading());\r\n    try {\r\n        const response = yield axios.get('http://5d22b7fd4e05c600146ef4dd.mockapi.io/cupcake/books')\r\n        yield put(actions.initSuccess(response));\r\n    } catch (error) {\r\n        yield put(actions.initFail(error));\r\n    }\r\n}","import {takeEvery} from 'redux-saga/effects';\r\n\r\nimport * as actionTypes from '../actions/actionTypes';\r\nimport { productSaga } from './productSaga';\r\n\r\nexport function* getProductsSaga() {\r\n    yield takeEvery(actionTypes.PRODUCTS_INIT_START, productSaga);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer/reducer';\nimport {getProductsSaga} from './store/sagas/index';\n\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(reducer, composeEnhancers(\n    applyMiddleware(sagaMiddleware)\n));\n\nsagaMiddleware.run(getProductsSaga);\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}