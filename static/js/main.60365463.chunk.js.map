{"version":3,"sources":["containers/SelectedCard/SelectedCard.module.scss","components/CartControls/CartControls.module.scss","App.module.scss","components/Cart/Cart.module.scss","components/UI/Modal/Modal.module.scss","components/UI/Spinner/Spinner.module.scss","components/ProductCard/ProductCard.module.scss","containers/Products/Products.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/UI/Spinner/Spinner.js","components/ProductCard/ProductCard.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/CartControls/CartControls.js","store/actions/actionTypes.js","store/actions/actions.js","containers/SelectedCard/SelectedCard.js","containers/Products/Products.js","components/Cart/Cart.js","App.js","serviceWorker.js","store/reducer/reducer.js","store/sagas/productSaga.js","store/sagas/index.js","index.js"],"names":["module","exports","Spinner","className","classes","loader","productCard","props","Card","onClick","showModal","index","title","src","img","alt","backdrop","show","Backdrop","clicked","Modal","modalClasses","this","cart","push","Cart","Fragment","hide","join","style","transform","opacity","children","Component","CartControls","Controls","removeItem","MoreLess","type","value","readOnly","addItem","AddToCart","addToCart","PRODUCTS_INIT_START","initStartLoading","initSuccess","response","initFail","error","connect","dispatch","order","useState","setValue","Wrapper","BriefBookInfo","OtherInfo","subtitle","Price","price","state","loading","data","currentCard","setCurrentCard","showCard","setShowCard","products","map","product","i","ProductCard","image","key","isbn13","selectedCard","url","ProductsContainer","cartUI","sum","Empty","FinalPrice","toFixed","content","orders","orderCount","length","initStart","actionTypes","showCart","setShowCart","useEffect","Header","UIContainer","CartIcon","Boolean","window","location","hostname","match","initialState","pushToCart","action","newSum","Number","reducer","books","productSaga","put","actions","axios","get","getProductsSaga","takeEvery","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.60365463.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"SelectedCard_Wrapper__1e23i\",\"BriefBookInfo\":\"SelectedCard_BriefBookInfo__2YeXV\",\"OtherInfo\":\"SelectedCard_OtherInfo__3dEUT\",\"Price\":\"SelectedCard_Price__2PwlI\",\"CartControls\":\"SelectedCard_CartControls__10-dE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Controls\":\"CartControls_Controls__m_XXw\",\"MoreLess\":\"CartControls_MoreLess__HP2Hq\",\"AddToCart\":\"CartControls_AddToCart__2L3vG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"App_Header__2oM2h\",\"UIContainer\":\"App_UIContainer__1iVBt\",\"CartIcon\":\"App_CartIcon__1K1b4\",\"Cart\":\"App_Cart__32nP9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cart\":\"Cart_Cart__2EMkO\",\"Empty\":\"Cart_Empty__2DgNb\",\"FinalPrice\":\"Cart_FinalPrice__109iW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2siLO\",\"Cart\":\"Modal_Cart__S1euL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__1HQxw\",\"load6\":\"Spinner_load6__2rK7U\",\"round\":\"Spinner_round__1n-l5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"ProductCard_Card__1HFZ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProductsContainer\":\"Products_ProductsContainer__1lm0C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2Bl1I\"};","import React from 'react';\r\nimport classes from './Spinner.module.scss';\r\n\r\n// Спиннер, который никто и никогда не увидит, потому что апи довольно быстрое.\r\n\r\nconst Spinner = () => (\r\n    <div className={classes.loader}>Loading...</div>\r\n);\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport classes from './ProductCard.module.scss'\r\n\r\n// Карточки из GET запроса\r\n\r\nconst productCard = props => {\r\n    return (\r\n        <section className={classes.Card} onClick={() => props.showModal(props.index)}>\r\n            <h3>{props.title}</h3>\r\n            <img src={props.img} alt=\"Product\"/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default productCard;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.scss';\r\n\r\n// Бэкдроп для модального окна\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React, { Component } from 'react';\r\n\r\nimport classes from './Modal.module.scss';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\n// Модальное окно\r\n\r\nclass Modal extends Component {\r\n\r\n    render () {\r\n\r\n        const modalClasses = [classes.Modal];\r\n        if (this.props.cart) {\r\n            modalClasses.push(classes.Cart)\r\n        }\r\n\r\n        return ( \r\n            <React.Fragment>\r\n                <Backdrop show={this.props.show} clicked={this.props.hide} />\r\n                <div\r\n                    className={modalClasses.join(' ')}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport classes from './CartControls.module.scss';\r\n\r\n// Элементы управления для отправки в корзину.\r\n\r\nconst CartControls = props => {\r\n    return (\r\n        <div>\r\n            <div className={classes.Controls}>\r\n                <button onClick={props.removeItem} className={classes.MoreLess}>-</button>\r\n                <input type=\"text\"value={props.value} readOnly />\r\n                <button onClick={props.addItem} className={classes.MoreLess}>+</button>\r\n            </div>\r\n            <div className={classes.AddToCart}>\r\n                <button onClick={props.addToCart}>Add to cart</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartControls;","export const PRODUCTS_INIT_START = 'PRODUCTS_INIT_START';\r\nexport const PRODUCTS_INIT_START_LOADING = 'PRODUCTS_INIT_START_LOADING';\r\nexport const PRODUCTS_INIT_SUCCESS = 'PRODUCTS_INIT_SUCCESS';\r\nexport const PRODUCTS_INIT_FAIL = 'PRODUCTS_INIT_FAIL';\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";","import * as actionTypes from './actionTypes';\r\n\r\n\r\nexport const initStart = () => {\r\n    return {\r\n        type: actionTypes.PRODUCTS_INIT_START\r\n    };\r\n};\r\n\r\nexport const initStartLoading = () => {\r\n    return {\r\n        type: actionTypes.PRODUCTS_INIT_START_LOADING\r\n    };\r\n};\r\n\r\nexport const initSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.PRODUCTS_INIT_SUCCESS,\r\n        response: response\r\n    };\r\n};\r\n\r\nexport const initFail = (error) => {\r\n    return {\r\n        type: actionTypes.PRODUCTS_INIT_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const addToCart = (order) => {\r\n    return {\r\n        type: actionTypes.ADD_TO_CART,\r\n        order: order\r\n    };\r\n};","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from './SelectedCard.module.scss'\r\nimport CartControls from '../../components/CartControls/CartControls';\r\nimport { addToCart } from '../../store/actions/actions'\r\n\r\n\r\n// Модальное окно, отправка в корзину.\r\n\r\nconst SelectedCard = props => {\r\n    const [value, setValue] = useState(1);\r\n\r\n\r\n    const pushToCart = () => {\r\n        const order = {\r\n            value: value,\r\n            title: props.title,\r\n            price: props.price\r\n        }\r\n        props.addToCart(order);\r\n        props.hide();\r\n    }\r\n\r\n\r\n    return (\r\n        <article className={classes.Wrapper}>\r\n            <section className={classes.BriefBookInfo}>\r\n                <h2>{props.title}</h2>\r\n                <img src={props.img} alt=\"Book\" />\r\n            </section>\r\n            <section className={classes.OtherInfo}>\r\n                <h3>{props.subtitle}</h3>\r\n                <p>\r\n                    Some other info that could be provided for the book.\r\n                    </p>\r\n                <p className={classes.Price}>Price: {props.price} $</p>\r\n                <section className={classes.CartControls}>\r\n                    <CartControls\r\n                        value={value}\r\n                        addItem={() => setValue(value + 1)}\r\n                        removeItem={() => value > 1 ? setValue(value - 1) : null}\r\n                        addToCart={pushToCart} />\r\n                </section>\r\n            </section>\r\n        </article>\r\n    );\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToCart: (order) => dispatch(addToCart(order))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SelectedCard);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport ProductCard from '../../components/ProductCard/ProductCard';\r\nimport classes from './Products.module.scss'\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport SelectedCard from '../SelectedCard/SelectedCard';\r\n\r\n// Основной контейнер, в котором выводятся карточки из GET запроса, а также\r\n// модальное окно.\r\n\r\nconst Products = props => {\r\n    const [currentCard, setCurrentCard] = useState({});\r\n    const [showCard, setShowCard] = useState(false);\r\n\r\n    let products = <Spinner />;\r\n    if (props.data && !props.loading) {\r\n        products = props.data.map((product, i) => <ProductCard\r\n            img={product.image}\r\n            key={product.isbn13}\r\n            title={product.title}\r\n            showModal={() => {\r\n                setCurrentCard(props.data[i]);\r\n                setShowCard(true);\r\n            }}\r\n            index={i} />);\r\n    }\r\n\r\n    const selectedCard = <Modal show={showCard} hide={() => {\r\n        setCurrentCard({});\r\n        setShowCard(false);\r\n    }}>\r\n        <SelectedCard title={currentCard.title}\r\n            img={currentCard.image}\r\n            subtitle={currentCard.subtitle}\r\n            price={currentCard.price}\r\n            url={currentCard.url}\r\n            hide={() => {\r\n                setCurrentCard({});\r\n                setShowCard(false);\r\n            }}\r\n        />\r\n    </Modal >\r\n\r\n    return (\r\n        <div className={classes.ProductsContainer}>\r\n            {showCard && selectedCard}\r\n            {products}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.loading,\r\n        data: state.data\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Products);","import React from 'react';\r\n\r\nimport classes from './Cart.module.scss';\r\n\r\n// Этот компонент - корзина. Если общая сумма покупок равна нулю, то выводится сообщение, что корзина пуста.\r\n\r\nconst Cart = props => {\r\n    let cartUI;\r\n\r\n    if (props.sum === 0) {\r\n        cartUI = <p className={classes.Empty}>Sorry!<br/>The cart is empty!</p>\r\n    } else {\r\n        cartUI = <React.Fragment>\r\n                    <p className={classes.FinalPrice}>Total price: {(props.sum).toFixed(2)} $</p>\r\n                    <button>Proceed to checkout</button>\r\n                </React.Fragment>\r\n    };\r\n    const content = props.orders.map(order => {\r\n        return (\r\n            <div>\r\n                <li>{order.title}...({`${order.price} x ${order.value}`}): {order.price * order.value} $</li>\r\n            </div>\r\n        )     \r\n    });\r\n\r\n    return (\r\n        <div className={classes.Cart}>\r\n            <ol>\r\n                {content}\r\n            </ol>\r\n            {cartUI}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Products from './containers/Products/Products';\nimport { initStart } from './store/actions/actions';\nimport classes from './App.module.scss';\nimport Modal from './components/UI/Modal/Modal';\nimport Cart from './components/Cart/Cart';\n\n// Основной контейнер, в котором хранится все приложение.\n\nconst App = props => {\n  const [showCart, setShowCart] = useState(false);\n  const {initStart} = props;\n\n  useEffect(() => {\n    initStart();\n  }, [initStart])\n\n\n  let cart = <Modal show={showCart} hide={() => setShowCart(false)} className={classes.Cart} cart={true}>\n    <Cart orders={props.orders} sum={props.sum} />\n  </Modal>\n  \n  return (\n    <div>\n      <header className={classes.Header}>\n        <div className={classes.UIContainer}>\n          <h1>SomeLogo</h1>\n          <button className={classes.CartIcon} onClick={() => setShowCart(true)}><i className=\"fa fa-shopping-cart\"></i> {props.orderCount}</button>\n        </div>\n      </header>\n      {showCart && cart}\n      <Products />\n    </div>\n\n  );\n};\n\n\nconst mapStateToProps = state => {\n  return {\n    orderCount: state.order.length,\n    orders: state.order,\n    sum: state.sum\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initStart: () => dispatch(initStart())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    order: [],\r\n    sum: 0\r\n};\r\n\r\nconst pushToCart = (state, action) => {\r\n    state.order.push(action.order);\r\n    const newSum = Number((action.order.price * action.order.value).toFixed(2));\r\n    return {\r\n        ...state,\r\n        sum: state.sum + newSum\r\n    };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.PRODUCTS_INIT_START_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.PRODUCTS_INIT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: action.response.data.books\r\n            }\r\n        case actionTypes.PRODUCTS_INIT_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        case actionTypes.ADD_TO_CART:\r\n            return pushToCart(state, action);\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import {put} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport * as actions from '../actions/actions';\r\n\r\nexport function* productSaga (action) {\r\n    yield put(actions.initStartLoading());\r\n    try {\r\n        const response = yield axios.get('https://bookstore-27221.firebaseio.com/pack.json')\r\n        yield put(actions.initSuccess(response));\r\n    } catch (error) {\r\n        yield put(actions.initFail(error));\r\n    }\r\n}","import {takeEvery} from 'redux-saga/effects';\r\n\r\nimport * as actionTypes from '../actions/actionTypes';\r\nimport { productSaga } from './productSaga';\r\n\r\nexport function* getProductsSaga() {\r\n    yield takeEvery(actionTypes.PRODUCTS_INIT_START, productSaga);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer/reducer';\nimport {getProductsSaga} from './store/sagas/index';\n\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(reducer, composeEnhancers(\n    applyMiddleware(sagaMiddleware)\n));\n\nsagaMiddleware.run(getProductsSaga);\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}